name: New Release

on:
  release:
    types: [created]

jobs:
  release-linux:
    name: Build and attach linux binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@master
      - name: Fetch dependencies
        run: cargo fetch
      - name: Build in release mode
        run: cargo build --release --frozen --target x86_64-unknown-linux-gnu
      - name: Add the version tag to the binary name
        run: |
          VERSION_TAG=$(jq --raw-output '.release.tag_name' "$GITHUB_EVENT_PATH")
          TARGET=x86_64-unknown-linux-gnu
          NAME=inkjet-$VERSION_TAG-$TARGET
          mkdir $NAME
          mv ./target/$TARGET/release/inkjet ./$NAME/inkjet
          chmod +x ./$NAME/inkjet
          zip -r $NAME.zip $NAME
      - name: Attach the binary to the release
        uses: ./.github/actions/attach-release-assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          assets: ./*.zip

  release-macos:
    name: Build and attach macOS binary
    runs-on: macos-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-apple-darwin
          default: true
      - name: Fetch dependencies
        run: cargo fetch
      - name: Build in release mode
        run: cargo build --release --frozen --target x86_64-apple-darwin
      - name: Add the version tag to the binary name
        run: |
          VERSION_TAG=$(jq --raw-output '.release.tag_name' "$GITHUB_EVENT_PATH")
          TARGET=x86_64-apple-darwin
          NAME=inkjet-$VERSION_TAG-$TARGET
          mkdir $NAME
          mv ./target/$TARGET/release/inkjet ./$NAME/inkjet
          chmod +x ./$NAME/inkjet
          zip -r $NAME.zip $NAME
      # NOTE: cannot use the attach-release-assets action because macOS doesn't support docker-based actions.
      # Luckily we can just run the bash script directly.
      - name: Attach the binary to the release
        run: ./.github/actions/attach-release-assets/run.sh ./*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
